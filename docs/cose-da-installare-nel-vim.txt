Installati:
 indentobject: select a python function with vii or vai

Ctags
=====

You need ctags, they suggest to use the Exuberant Ctags version which has 
support for many languages (and one of these is Python). The exuberant ctags 
main page is hosted on sourceforge: http://ctgas.sf.net and you can install it 
with brew:

    brew install ctags

To prepare tags:

    cd <your-project-dir> 
    ctags --python-kinds=-i --exclude=build -R .

The `--python-kinds=-i` purpose is to disable the recognition of import lines 
as definition that could be annoying.

How to use it:
 - vim -t <tag name> to open vim straight on the tag
 - Ctrl+] to jump to tag when over a word
 - Ctrl+T to pop back
 - :tselect or :stselect to open
 - :tnext, :tprev to go to next/prev tag finding

Interessanti:
=============
 https://github.com/vim-scripts/DirDiff.vim
 https://github.com/vim-scripts/DrawIt   <--- disegnare in Vim
 https://github.com/vim-scripts/pytest.vim
 makegreen.vim
 https://github.com/vim-scripts/Command-T
 conqueTerm 

Ruby:
 nerdcommenter
 taglist
 markdown
 vim-ruby-debugger
 vim-endwise
 rubycomplete Mark Guzman <segfault@hasno.info>

" When hitting <;>, complete a snippet if there is one; else, insert an actual
" <;>
function! InsertSnippetWrapper()
    let inserted = TriggerSnippet()
    if inserted == "\<tab>"
        return ";"
    else
        return inserted
    endif
endfunction


" Use <c-h> for snippets
let g:NERDSnippets_key = '<c-h>'

met makeprg=python\ -m\ nose.core\ --machine-out

if &diff
  nmap <c-h> :diffget 1<cr>
  nmap <c-l> :diffget 3<cr>
  nmap <c-k> [cz.
  nmap <c-j> ]cz.
  set nonumber
endif
:se

